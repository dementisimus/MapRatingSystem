name: build
on: [ push, workflow_dispatch ]

env: 
  name: MapRatingSystem
  id: mrs
  version: 1.3.0
  jar: MapRatingSystem-1.3.0.jar
  pom: MapRatingSystem-1.3.0.pom
  stage: development

jobs:
  build:  
    strategy:
      matrix:
        platform: [ ubuntu-latest ]

    runs-on: ${{ matrix.platform }}
    name: on ${{ matrix.platform }}
    
    steps:
      - name: checkout
        uses: actions/checkout@v2
          
      - name: setup-jdk-16
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '16'
          
      - name: cache
        uses: actions/cache@v2
        with:
            path: ~/.m2/repository
            key: ${{ runner.os }}-maven-${{ secrets.CACHE_KEY }}
          
      - name: build
        run: mvn -U clean package javadoc:javadoc --file pom.xml
            
      - name: pre-deploy
        run: |
          mkdir ./artifacts
          mkdir ./javadocs
          cp ./target/${{ env.jar }} ./artifacts/${{ env.jar }}
          cp ./pom.xml ./artifacts/${{ env.pom }}
          cp -R ./target/site/apidocs/. ./javadocs
            
      - name: deploy artifacts
        uses: garygrossgarten/github-action-scp@v0.7.3
        with:
            local: ./artifacts
            remote: /home/repo-deployment/repository/repositories/${{ env.stage }}/dev/dementisimus/${{ env.id }}/${{ env.name }}/${{ env.version }}/
            concurrency: 5
            host: ${{ secrets.SSH_HOST }}
            username: ${{ secrets.SSH_USERNAME }}
            password: ${{ secrets.SSH_PASSWORD }}
            privateKey: ${{ secrets.PRIVATE_KEY}}
            passphrase: ${{ secrets.PRIVATE_KEY_PASSPHRASE }}
            
      - name: deploy javadocs
        uses: garygrossgarten/github-action-scp@v0.7.3
        with:
            local: ./javadocs
            remote: /var/www/dementisimus.dev/html/docs/${{ env.stage }}/${{ env.name }}/${{ env.version }}/
            concurrency: 5
            host: ${{ secrets.SSH_HOST }}
            username: ${{ secrets.SSH_USERNAME }}
            password: ${{ secrets.SSH_PASSWORD }}
            privateKey: ${{ secrets.PRIVATE_KEY}}
            passphrase: ${{ secrets.PRIVATE_KEY_PASSPHRASE }}
